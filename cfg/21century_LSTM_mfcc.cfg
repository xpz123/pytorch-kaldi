[cfg_proto]
cfg_proto = proto/global.proto
cfg_proto_chunk = proto/global_chunk.proto

[exp]
cmd = 
run_nn_script = run_nn
out_folder = exp/21century_LSTM_mfcc
seed = 2234
use_cuda = True
multi_gpu = False
save_gpumem = False
n_epochs_tr = 24

[dataset1]
data_name = 21century_tr
fea = fea_name=mfcc
	fea_lst=21century_train/train_140h_sp_hires/feats.scp
	fea_opts=apply-cmvn --utt2spk=ark:21century_train/train_140h_sp_hires/utt2spk  scp:21century_train/train_140h_sp_hires/cmvn.scp ark:- ark:- |
	cw_left=0
	cw_right=0

lab = lab_name=lab_cd
	lab_folder=21century_train/140h_ali
	lab_opts=ali-to-pdf
	lab_count_file=none
	lab_data_folder=21century_train/train_140h_sp_hires/
	lab_graph=
	
n_chunks = 100


[data_use]
train_with = 21century_tr
valid_with = 21century_tr
forward_with = 21century_tr

[batches]
batch_size_train = 8
max_seq_length_train = 1000
increase_seq_length_train = True
start_seq_len_train = 100
multply_factor_seq_len_train = 2
batch_size_valid = 8
max_seq_length_valid = 1000

[architecture1]
arch_name = LSTM_cudnn_layers
arch_proto = proto/LSTM.proto
arch_library = neural_networks
arch_class = LSTM
arch_pretrain_file = none
arch_freeze = False
arch_seq_model = True
lstm_lay = 550,550,550,550
lstm_drop = 0.2,0.2,0.2,0.2
lstm_use_laynorm_inp = False
lstm_use_batchnorm_inp = False
lstm_use_laynorm = False,False,False,False
lstm_use_batchnorm = True,True,True,True
lstm_bidir = True
lstm_act = tanh,tanh,tanh,tanh
lstm_orthinit = True
arch_lr = 0.0016
arch_halving_factor = 0.5
arch_improvement_threshold = 0.001
arch_opt = rmsprop
opt_momentum = 0.0
opt_alpha = 0.95
opt_eps = 1e-8
opt_centered = False
opt_weight_decay = 0.0

[architecture2]
arch_name = MLP_layers
arch_proto = proto/MLP.proto
arch_library = neural_networks
arch_class = MLP
arch_pretrain_file = none
arch_freeze = False
arch_seq_model = False
dnn_lay = N_out_lab_cd
dnn_drop = 0.0
dnn_use_laynorm_inp = False
dnn_use_batchnorm_inp = False
dnn_use_batchnorm = False
dnn_use_laynorm = False
dnn_act = softmax
arch_lr = 0.0016
arch_halving_factor = 0.5
arch_improvement_threshold = 0.001
arch_opt = rmsprop
opt_momentum = 0.0
opt_alpha = 0.95
opt_eps = 1e-8
opt_centered = False
opt_weight_decay = 0.0


[model]
model_proto = proto/model.proto
model = out_dnn1=compute(LSTM_cudnn_layers,mfcc)
	out_dnn2=compute(MLP_layers,out_dnn1)
	loss_cd=cost_nll(out_dnn2,lab_cd)
	loss_final=cost_nll(out_dnn2,lab_cd)
	err_final=cost_err(out_dnn2,lab_cd)

[forward]
forward_out = out_dnn2
normalize_posteriors = True
normalize_with_counts_from = lab_cd
save_out_file = False
require_decoding = True

[decoding]
decoding_script_folder = kaldi_decoding_scripts/
decoding_script = decode_dnn.sh
decoding_proto = proto/decoding.proto
min_active = 200
max_active = 7000
max_mem = 50000000
beam = 13.0
latbeam = 8.0
acwt = 0.2
max_arcs = -1
skip_scoring = false
scoring_script = local/score.sh
scoring_opts = "--min-lmwt 1 --max-lmwt 10"
norm_vars = False

